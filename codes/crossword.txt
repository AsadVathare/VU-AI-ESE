def solve_crossword(board, words):
    if not words:
        return board

    word = words[0]
    for i in range(len(board)):
        for j in range(len(board[i])):
            if board[i][j] == '-' or board[i][j] == word[0]:
                if can_place_word(board, word, i, j):
                    new_board = place_word(board, word, i, j)
                    result = solve_crossword(new_board, words[1:])
                    if result is not None:
                        return result

    return None

def can_place_word(board, word, row, col):
    if col + len(word) > len(board[row]):
        return False

    for i in range(len(word)):
        if board[row][col + i] != '-' and board[row][col + i] != word[i]:
            return False

    return True

def place_word(board, word, row, col):
    new_board = [list(row) for row in board]
    for i in range(len(word)):
        new_board[row][col + i] = word[i]

    return new_board

# Example usage
board = [
    ['-', '-', '-', '-', '-'],
    ['-', '-', '-', '-', '-'],
    ['-', '-', '-', '-', '-'],
    ['-', '-', '-', '-', '-'],
    ['-', '-', '-', '-', '-'],
]

words = ['HELLO', 'WORLD']

solution = solve_crossword(board, words)
if solution is not None:
    for row in solution:
        print(' '.join(row))
else:
    print('No solution found.')
